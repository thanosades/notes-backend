{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","obj","getAll","a","axios","get","res","data","create","newNote","post","update","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","serverNotes","getNotes","addNote","event","preventDefault","noteObject","date","Date","toISOString","Math","random","returnedNote","concat","toggleImportanceOf","find","n","changedNote","map","setTimeout","filter","notesToShow","onSubmit","value","onChange","e","target","type","previous","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98babad2.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  ) \n}\n\nexport default Note\n\n","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = async () => {\n  const res = await axios.get(baseUrl)\n  return res.data\n}\n\nconst create = async (newNote) => {\n  const res = await axios.post(baseUrl, newNote)\n  return res.data\n}\n\nconst update = async (id, newNote) => {\n    const res = await axios.put(`${baseUrl}/${id}`, newNote)\n    return res.data\n}\n\nconst obj = {\n  getAll,\n  create,\n  update\n}\n\nexport default obj\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) return null\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n    </div>\n  )\n}\n\nexport default Footer\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    async function getNotes() {\n      const serverNotes = await noteService.getAll()\n      setNotes(serverNotes)\n    }\n\n    getNotes()\n  }, [])\n\n  const addNote = async (event) => {\n    event.preventDefault()\n\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n    }\n\n    const returnedNote = await noteService.create(noteObject)\n    setNotes(notes.concat(returnedNote))\n    setNewNote('')\n  }\n\n  const toggleImportanceOf = async (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n    let returnedNote;\n    try {\n      returnedNote = await noteService.update(id, changedNote)\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    } catch (e) {\n      setErrorMessage(`Note \"${note.content}\" was already removed from server`)\n      setTimeout(() => setErrorMessage(null), 5000)\n      setNotes(notes.filter(note => note.id !== id))\n    }\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div className=\"app\">\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={(e) => setNewNote(e.target.value)} />\n        <button type=\"submit\">save</button>\n      </form>\n      <div>\n        <button onClick={() => setShowAll(previous => !previous)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note =>\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}