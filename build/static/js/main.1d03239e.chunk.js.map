{"version":3,"sources":["components/Note.js","components/Notification.js","components/LoginForm.js","components/NoteForm.js","components/Togglable.js","components/Footer.js","services/notes.js","services/login.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","value","onChange","type","NoteForm","createNote","useState","newNote","setNewNote","e","preventDefault","Math","random","target","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","Footer","color","fontStyle","fontSize","baseUrl","token","exports","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","App","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","setUsername","setPassword","user","setUser","noteFormRef","useRef","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","noteObject","returnedNote","concat","notesToShow","filter","handleLogin","event","loginService","setItem","stringify","setTimeout","name","map","find","n","changedNote","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d03239e.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content} \n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n   handleSubmit,\n   handleUsernameChange,\n   handlePasswordChange,\n   username,\n   password\n  }) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n      </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst NoteForm = ({ createNote }) => {\n  const [newNote, setNewNote] = useState('')\n\n  const handleChange = ({ target }) => {\n    setNewNote(target.value)\n  }\n\n  const addNote = e => {\n    e.preventDefault()\n    createNote({\n      content: newNote,\n      important: Math.random() > 0.5\n    })\n    \n    setNewNote('')\n  }\n\n  return (\n    <div>\n      <h2>Create a new note</h2>\n\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NoteForm","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note backend application, Thanos Dimitriades, 2021</em>\n    </div>\n  )\n}\n\nexport default Footer","import axios from 'axios'\nconst baseUrl = '/api/notes'\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst exports = { \n  getAll,\n  create,\n  update,\n  setToken \n};\n\nexport default exports;\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nconst exports = {\n  login\n};\n\nexport default exports;\n","import React, { useState, useEffect, useRef } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport NoteForm from './components/NoteForm'\nimport Togglable from './components/Togglable'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\nimport loginService from './services/login' \n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null)\n\n  const noteFormRef = useRef()\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])  \n\n  const addNote = async (noteObject) => {\n    const returnedNote = await noteService.create(noteObject)\n    setNotes(notes.concat(returnedNote))\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n    .update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(`Note '${note.content}' was already removed from server`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    })    \n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      noteService.setToken(user.token)\n      window.localStorage.setItem('loggedNoteappUser', JSON.stringify(user)) \n\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const loginForm = () => (\n    <Togglable buttonLabel=\"log in\">\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n\n  const noteForm = () => (\n    <Togglable buttonLabel=\"new note\" ref={noteFormRef}>\n      <NoteForm createNote={addNote} />\n    </Togglable>\n  )\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>{user.name} logged in</p>\n          {noteForm()}\n        </div>\n      }\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n            <Note\n              key={note.id}\n              note={note} \n              toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n        )}\n      </ul>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}